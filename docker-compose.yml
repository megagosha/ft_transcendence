version: '3.7'

services:

  postgres:
    image: postgres:13.3-alpine
    container_name: postgress-container
    environment:
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_NAME}'
      PG_DATA: '/var/lib/postgresql/data'
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '${DB_HOST_PORT}:${DB_CONTAINER_PORT}'
    networks:
      - backend
    restart: always


  backend:
    build:
      context: ./app
      target: Dockerfile
    container_name: backend-container
    env_file:
      - .env # ??? check numbers (ports)
    volumes:
      - ./app/:/usr/src/app
      - ./usr/src/app/node_modules
    ports:
      - '${BACKEND_HOST_PORT}:${BACKEND_CONTAINER_PORT}'
    networks:
      - backend
      - frontend
    restart: always
    depends_on:
      - postgres

#  main:
#    build:
#      context: .
#      target: development
#    volumes:
#      - ./app/:/usr/src/app
#      - ./usr/src/app/node_modules
#    env_file:
#      - .env
#    ports:
#      - "${SERVER_PORT}:${SERVER_PORT}"
#      - 9229:9229
#    command: npm run start
#    networks:
#      - webnet
#    depends_on:
#      - postgres
#    links:
#      - postgres:postgres

#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - 8080:8080
#networks:
#  webnet:
volumes:
  pgdata:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge