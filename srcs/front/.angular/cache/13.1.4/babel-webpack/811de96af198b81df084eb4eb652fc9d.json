{"ast":null,"code":"import { FormControl, Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../services/chat.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/common\";\n\nfunction EnterPasswordComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getPasswordError());\n  }\n}\n\nexport let EnterPasswordComponent = /*#__PURE__*/(() => {\n  class EnterPasswordComponent {\n    constructor(data, dialogRef, chatService) {\n      this.dialogRef = dialogRef;\n      this.chatService = chatService;\n      this.hide = true;\n      this.chatId = data.chatId;\n      this.password = new FormControl('', Validators.required);\n    }\n\n    ngOnInit() {}\n\n    getPasswordError() {\n      return this.password.getError('validation');\n    }\n\n    closeDialog() {\n      this.dialogRef.close(false);\n    }\n\n    onSubmit() {\n      if (this.password.valid) {\n        this.chatService.joinChat(this.chatId, this.password.value).subscribe(() => {\n          this.dialogRef.close(true);\n        }, error => {\n          if (error.status == 400\n          /* BadRequest */\n          ) {\n            const message = error.error.message.toString();\n\n            if (message.toLowerCase().includes(\"пароль\")) {\n              this.password.setErrors({\n                'validation': message\n              });\n            } else {\n              throw new HttpErrorResponse(error);\n            }\n          } else {\n            throw new HttpErrorResponse(error);\n          }\n        });\n      } else {\n        this.password.setErrors({\n          'validation': \"You must enter password\"\n        });\n      }\n    }\n\n  }\n\n  EnterPasswordComponent.ɵfac = function EnterPasswordComponent_Factory(t) {\n    return new (t || EnterPasswordComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.ChatService));\n  };\n\n  EnterPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EnterPasswordComponent,\n    selectors: [[\"app-enter-password\"]],\n    decls: 15,\n    vars: 6,\n    consts: [[2, \"text-align\", \"center\", \"margin\", \"0 0 15px\", \"font-size\", \"12pt\", \"font-weight\", \"500\"], [\"appearance\", \"fill\", 2, \"width\", \"100%\"], [\"autocomplete\", \"off\", \"matInput\", \"\", \"required\", \"\", 3, \"type\", \"formControl\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [4, \"ngIf\"], [\"mat-dialog-actions\", \"\", 2, \"width\", \"100%\", \"display\", \"flex\", \"justify-content\", \"space-around\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"type\", \"submit\", \"value\", \"submit\", \"cdkFocusInitial\", \"\", 3, \"click\"]],\n    template: function EnterPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 0);\n        i0.ɵɵtext(1, \" Enter password to join chat\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Enter password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function EnterPasswordComponent_Template_button_click_6_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵelementStart(7, \"mat-icon\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, EnterPasswordComponent_mat_error_9_Template, 2, 1, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function EnterPasswordComponent_Template_button_click_11_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtext(12, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function EnterPasswordComponent_Template_button_click_13_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(14, \"Apply\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\")(\"formControl\", ctx.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.password.hasError(\"validation\"));\n      }\n    },\n    directives: [i3.MatFormField, i3.MatLabel, i4.MatInput, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.FormControlDirective, i6.MatButton, i3.MatSuffix, i7.MatIcon, i8.NgIf, i3.MatError, i1.MatDialogActions],\n    encapsulation: 2\n  });\n  return EnterPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}