{"ast":null,"code":"import { FormControl, Validators } from \"@angular/forms\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction ChangeUsernameDialog_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username length should be from 2 to 50 symbols. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangeUsernameDialog_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username already taken \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ChangeUsernameDialog = /*#__PURE__*/(() => {\n  class ChangeUsernameDialog {\n    constructor(dialog, userService) {\n      this.dialog = dialog;\n      this.userService = userService;\n      this.username = new FormControl(\"\", [Validators.maxLength(50), Validators.required, Validators.minLength(2)]);\n      this._userService = userService;\n    }\n\n    closeDialog() {\n      this.dialog.closeAll();\n    }\n\n    onSubmit() {\n      if (!this.username.valid) return;\n      this.userService.setUserName(this.username.value).subscribe(data => {\n        if (data.status != 201) this.username.setErrors({\n          \"conflict\": \"something went wrong!\"\n        });else {\n          this.closeDialog();\n          this.userService.profileUpdate();\n        }\n      }, error => {\n        if (error instanceof HttpErrorResponse) {\n          this.username.setErrors({\n            \"conflict\": \"Username already taken!\"\n          });\n        } else {\n          console.log(\"Unknown error\");\n        }\n      });\n    }\n\n  }\n\n  ChangeUsernameDialog.ɵfac = function ChangeUsernameDialog_Factory(t) {\n    return new (t || ChangeUsernameDialog)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n\n  ChangeUsernameDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangeUsernameDialog,\n    selectors: [[\"change-username-dialog\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[1, \"chat-user-name-dialog\"], [\"mat-dialog-title\", \"\"], [\"id\", \"username-form\", 1, \"change-username-form\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"matInput\", \"\", \"matInput\", \"\", \"maxlength\", \"256\", \"placeholder\", \"Provide new username\", 1, \"username-input\", 3, \"formControl\"], [\"new_username\", \"\"], [4, \"ngIf\"], [\"align\", \"end\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"type\", \"submit\", \"form\", \"username-form\", \"value\", \"submit\", 3, \"click\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function ChangeUsernameDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Change username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵelementStart(4, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(5, \"mat-label\");\n        i0.ɵɵtext(6, \"NEW USERNAME\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4, 5);\n        i0.ɵɵtemplate(9, ChangeUsernameDialog_mat_error_9_Template, 2, 0, \"mat-error\", 6);\n        i0.ɵɵtemplate(10, ChangeUsernameDialog_mat_error_10_Template, 2, 0, \"mat-error\", 6);\n        i0.ɵɵelementStart(11, \"mat-hint\", 7);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 8);\n        i0.ɵɵelementStart(14, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ChangeUsernameDialog_Template_button_click_14_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(15, \"Apply\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function ChangeUsernameDialog_Template_button_click_16_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtext(17, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(8);\n\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formControl\", ctx.username);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx.username.hasError(\"maxlength\") || ctx.username.hasError(\"minlength\")) && !ctx.username.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.username.hasError(\"conflict\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", _r0.value.length, \" / 50\");\n      }\n    },\n    directives: [i1.MatDialogTitle, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.MatFormField, i4.MatLabel, i5.MatInput, i3.DefaultValueAccessor, i3.MaxLengthValidator, i3.NgControlStatus, i3.FormControlDirective, i6.NgIf, i4.MatError, i4.MatHint, i1.MatDialogActions, i7.MatButton],\n    styles: [\".profile[_ngcontent-%COMP%]{width:35%;min-width:350px;margin:30px auto auto;padding:50px}.card-friend-list[_ngcontent-%COMP%]{width:35%;min-width:350px;margin:30px auto auto;padding:50px;height:350px}.profile-item[_ngcontent-%COMP%]{margin:15px;text-align:right}.profile-item.mat-button[_ngcontent-%COMP%]{margin-left:20px}.profile-spacer[_ngcontent-%COMP%]{flex:1 1 auto}.profile[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:30px;color:#000;font-weight:700}.profile[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:left}.profile[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:auto}.chat-user-name-dialog[_ngcontent-%COMP%], .full-width[_ngcontent-%COMP%]{width:100%}.username-input[_ngcontent-%COMP%]{margin:10px}.mat-dialog-title[_ngcontent-%COMP%]{color:#000}\"]\n  });\n  return ChangeUsernameDialog;\n})();","map":null,"metadata":{},"sourceType":"module"}