{"ast":null,"code":"import { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/game.service\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/table\";\n\nfunction LadderComponent_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \" No.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LadderComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r8.position, \" \");\n  }\n}\n\nfunction LadderComponent_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \" Player\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LadderComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵelement(2, \"img\", 12);\n    i0.ɵɵelementStart(3, \"div\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", element_r9.avatarImgName, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", element_r9.username, \" \");\n  }\n}\n\nfunction LadderComponent_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \" Games won\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LadderComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r10.games_won, \" \");\n  }\n}\n\nfunction LadderComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 14);\n  }\n}\n\nfunction LadderComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 15);\n  }\n}\n\nconst template = [{\n  position: 1,\n  username: '',\n  avatarImgName: \"http://localhost:3000/default.png\",\n  games_won: 0\n}];\nexport let LadderComponent = /*#__PURE__*/(() => {\n  class LadderComponent {\n    constructor(gameService) {\n      this.gameService = gameService;\n      this.ladderColumns = ['position', 'player', 'games_won'];\n      this.dataSource = new LadderDataSource(this.gameService);\n    }\n\n    ngOnInit() {\n      this.dataSource.update();\n    }\n\n  }\n\n  LadderComponent.ɵfac = function LadderComponent_Factory(t) {\n    return new (t || LadderComponent)(i0.ɵɵdirectiveInject(i1.GameService));\n  };\n\n  LadderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LadderComponent,\n    selectors: [[\"app-ladder\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"card-ladder\"], [\"mat-table\", \"\", 1, \"ladder-table\", 3, \"dataSource\"], [\"matColumnDef\", \"position\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"player\"], [\"matColumnDef\", \"games_won\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [1, \"profile-cell\"], [\"width\", \"32px\", 1, \"cell-avatar\", 3, \"src\"], [1, \"cell-username\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function LadderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"mat-card-title\");\n        i0.ɵɵtext(2, \"Ladder\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\", 1);\n        i0.ɵɵelementContainerStart(4, 2);\n        i0.ɵɵtemplate(5, LadderComponent_th_5_Template, 2, 0, \"th\", 3);\n        i0.ɵɵtemplate(6, LadderComponent_td_6_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(7, 5);\n        i0.ɵɵtemplate(8, LadderComponent_th_8_Template, 2, 0, \"th\", 3);\n        i0.ɵɵtemplate(9, LadderComponent_td_9_Template, 5, 2, \"td\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(10, 6);\n        i0.ɵɵtemplate(11, LadderComponent_th_11_Template, 2, 0, \"th\", 3);\n        i0.ɵɵtemplate(12, LadderComponent_td_12_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(13, LadderComponent_tr_13_Template, 1, 0, \"tr\", 7);\n        i0.ɵɵtemplate(14, LadderComponent_tr_14_Template, 1, 0, \"tr\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.ladderColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.ladderColumns);\n      }\n    },\n    directives: [i2.MatCard, i2.MatCardTitle, i3.MatTable, i3.MatColumnDef, i3.MatHeaderCellDef, i3.MatHeaderCell, i3.MatCellDef, i3.MatCell, i3.MatHeaderRowDef, i3.MatHeaderRow, i3.MatRowDef, i3.MatRow],\n    styles: [\"table[_ngcontent-%COMP%]{width:100%}.profile-cell[_ngcontent-%COMP%]{display:flex}.cell-username[_ngcontent-%COMP%]{margin-left:10px;align-self:center}.card-ladder[_ngcontent-%COMP%]{width:35%;min-width:350px;margin:30px auto auto;padding:50px;height:350px}.ladder-table[_ngcontent-%COMP%]{margin-top:20px}\"]\n  });\n  return LadderComponent;\n})();\nexport class LadderDataSource extends DataSource {\n  constructor(gameService) {\n    super();\n    this.gameService = gameService;\n    /** Stream of data that is provided to the table. */\n\n    this.data = new BehaviorSubject([]);\n    this.loadingData = new BehaviorSubject(false);\n    this.loading = this.loadingData.asObservable();\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n\n\n  connect() {\n    return this.gameService.getLadder();\n  }\n\n  disconnect() {\n    this.data.complete();\n    this.loadingData.complete();\n  }\n\n  update() {\n    this.loadingData.next(true);\n    this.gameService.getLadder().subscribe(res => {\n      this.data.next(res);\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}