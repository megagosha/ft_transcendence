{"ast":null,"code":"import { UserChatStatus, UserStatus } from \"../../../services/chat.service\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormControl } from \"@angular/forms\";\nimport { debounceTime, distinctUntilChanged, map } from \"rxjs\";\nimport { ConfirmFormComponent } from \"../../../confirm-form/confirm-form.component\";\nimport { ParticipantEditComponent } from \"./participant-edit/participant-edit.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../../services/chat.service\";\nimport * as i3 from \"../../../services/user.service\";\nimport * as i4 from \"../../../services/game.service\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"ngx-infinite-scroll\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/material/chips\";\nimport * as i12 from \"@angular/material/tooltip\";\nimport * as i13 from \"@angular/material/button\";\nimport * as i14 from \"@angular/material/menu\";\n\nfunction ChatParticipantsEditComponent_div_7_mat_chip_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r2.getTimeBlockExpire(user_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r1.userChatStatus.slice(0, 1));\n  }\n}\n\nfunction ChatParticipantsEditComponent_div_7_mat_chip_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r3.getTimeBlockExpire(user_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r1.userChatStatus.slice(0, 1));\n  }\n}\n\nfunction ChatParticipantsEditComponent_div_7_mat_chip_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"matTooltip\", \"Role: \" + user_r1.userChatRole.toLowerCase())(\"selected\", user_r1.userChatRole != \"PARTICIPANT\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r1.userChatRole.slice(0, 1), \" \");\n  }\n}\n\nfunction ChatParticipantsEditComponent_div_7_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ChatParticipantsEditComponent_div_7_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const user_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.inviteToPlay(user_r1);\n    });\n    i0.ɵɵtext(1, \" Invite to play \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChatParticipantsEditComponent_div_7_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ChatParticipantsEditComponent_div_7_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const user_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.watchGame(user_r1);\n    });\n    i0.ɵɵtext(1, \" Watch game \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChatParticipantsEditComponent_div_7_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ChatParticipantsEditComponent_div_7_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const user_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.onDelete(user_r1);\n    });\n    i0.ɵɵtext(1, \" Remove participant \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChatParticipantsEditComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ChatParticipantsEditComponent_div_7_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.onSelect(user_r1);\n    });\n    i0.ɵɵelement(2, \"img\", 10);\n    i0.ɵɵelementStart(3, \"div\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-chip-list\");\n    i0.ɵɵtemplate(6, ChatParticipantsEditComponent_div_7_mat_chip_6_Template, 2, 2, \"mat-chip\", 12);\n    i0.ɵɵtemplate(7, ChatParticipantsEditComponent_div_7_mat_chip_7_Template, 2, 2, \"mat-chip\", 13);\n    i0.ɵɵtemplate(8, ChatParticipantsEditComponent_div_7_mat_chip_8_Template, 2, 3, \"mat-chip\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵelementStart(10, \"button\", 15);\n    i0.ɵɵelementStart(11, \"mat-icon\", 16);\n    i0.ɵɵtext(12, \"more_vert\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-menu\", null, 17);\n    i0.ɵɵelementStart(15, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ChatParticipantsEditComponent_div_7_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.goToProfile(user_r1);\n    });\n    i0.ɵɵtext(16, \" User profile \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, ChatParticipantsEditComponent_div_7_button_17_Template, 2, 0, \"button\", 19);\n    i0.ɵɵtemplate(18, ChatParticipantsEditComponent_div_7_button_18_Template, 2, 0, \"button\", 19);\n    i0.ɵɵtemplate(19, ChatParticipantsEditComponent_div_7_button_19_Template, 2, 0, \"button\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n\n    const _r5 = i0.ɵɵreference(14);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", user_r1.avatar, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", user_r1.userChatStatus == \"BANNED\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r1.userChatStatus == \"MUTED\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r1.userChatStatus == \"ACTIVE\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r5);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.availableToMatch(user_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.availableWatchGame(user_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.availableEdit(user_r1));\n  }\n}\n\nexport let ChatParticipantsEditComponent = /*#__PURE__*/(() => {\n  class ChatParticipantsEditComponent {\n    constructor(dialogRef, data, chatService, userService, dialog, gameService) {\n      this.dialogRef = dialogRef;\n      this.chatService = chatService;\n      this.userService = userService;\n      this.dialog = dialog;\n      this.gameService = gameService;\n      this.users = [];\n      this.allUsers = [];\n      this.return = false;\n      this.pageSize = 50;\n      this.details = data.details;\n      this.brief = data.brief;\n      this.currentUser = userService.user;\n      this.searchName = new FormControl('');\n    }\n\n    ngOnInit() {\n      this.nextPage();\n      this.searchName.valueChanges.pipe(debounceTime(500), distinctUntilChanged(), map(chatName => {\n        this.findUsers();\n      })).subscribe();\n    }\n\n    findUsers() {\n      const userName = this.searchName.value;\n\n      if (userName != null && userName.length > 0) {\n        if (!this.return) {\n          this.allUsers = this.users;\n          this.return = true;\n        }\n\n        this.users = [];\n        this.nextPage();\n      } else if (this.return) {\n        this.users = this.allUsers;\n        this.allUsers = [];\n        this.return = false;\n      }\n    }\n\n    nextPage() {\n      this.chatService.findParticipants(this.details.id, this.searchName.value, this.users.length, this.pageSize).subscribe(page => {\n        page.users.forEach(user => {\n          const userInd = this.users.findIndex(u => u.id == user.id);\n\n          if (userInd == -1) {\n            if (user.dateTimeBlockExpire != null) {\n              user.dateTimeBlockExpire = new Date(user.dateTimeBlockExpire);\n            }\n\n            this.users.push(user);\n          }\n        });\n      });\n    }\n\n    closeDialog() {\n      this.dialogRef.close();\n    }\n\n    onSelect(user) {\n      this.dialog.open(ParticipantEditComponent, {\n        width: '400px',\n        height: '560px',\n        backdropClass: \"backdrop-dialog-next\",\n        data: {\n          'participant': user\n        }\n      }).afterClosed().subscribe(() => {\n        if (this.return) {\n          this.searchName.setValue('');\n        }\n      });\n    }\n\n    onDelete(user) {\n      const dialogRef = this.dialog.open(ConfirmFormComponent, {\n        width: '250px'\n      });\n      dialogRef.afterClosed().subscribe(confirm => {\n        if (confirm) {\n          this.chatService.deleteParticipant(this.details.id, user.id).subscribe(() => {\n            const userInd = this.users.findIndex(u => u.id == user.id);\n            this.users.splice(userInd, 1);\n            this.details.userCount -= 1;\n\n            if (this.return) {\n              this.searchName.setValue('');\n            }\n          });\n        }\n      });\n    }\n\n    availableEdit(user) {\n      if (this.currentUser.id != user.id) {\n        return this.brief.userChatRole == 'OWNER' || this.brief.userChatRole == 'ADMIN' && user.userChatRole == 'PARTICIPANT';\n      }\n\n      return false;\n    }\n\n    getTimeBlockExpire(user) {\n      if (user.userChatStatus == UserChatStatus.BANNED) {\n        return `Status: banned before '${this.chatService.getTimeBlockExpire(user.dateTimeBlockExpire)}'`;\n      }\n\n      return `Status: muted before '${this.chatService.getTimeBlockExpire(user.dateTimeBlockExpire)}'`;\n    }\n\n    goToProfile(user) {\n      this.dialog.afterAllClosed.subscribe(() => {\n        this.chatService.routeToProfile(user.id);\n      });\n      this.dialog.closeAll();\n    }\n\n    availableToMatch(user) {\n      return this.currentUser.id != user.id && user.status == UserStatus.ONLINE;\n    }\n\n    availableWatchGame(user) {\n      return this.currentUser.id != user.id && user.status == UserStatus.ACTIVE;\n    }\n\n    inviteToPlay(user) {\n      this.gameService.inviteToPlay(user.id);\n    }\n\n    watchGame(user) {\n      this.gameService.watchGame(user.id);\n    }\n\n  }\n\n  ChatParticipantsEditComponent.ɵfac = function ChatParticipantsEditComponent_Factory(t) {\n    return new (t || ChatParticipantsEditComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.ChatService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i4.GameService));\n  };\n\n  ChatParticipantsEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatParticipantsEditComponent,\n    selectors: [[\"app-chat-participants-edit\"]],\n    inputs: {\n      details: \"details\",\n      brief: \"brief\"\n    },\n    decls: 11,\n    vars: 5,\n    consts: [[2, \"text-align\", \"center\", \"margin\", \"0 0 10px\", \"font-size\", \"12pt\", \"font-weight\", \"500\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"type\", \"search\", \"minlength\", \"1\", \"maxlength\", \"50\", \"placeholder\", \"Search by name\", \"name\", \"messageText\", \"autocomplete\", \"off\", 1, \"chat-name-input\", 3, \"formControl\"], [\"matSuffix\", \"\"], [\"infiniteScroll\", \"\", 1, \"participant-list-content\", 3, \"scrollWindow\", \"infiniteScrollUpDistance\", \"infiniteScrollThrottle\", \"scrolled\"], [\"class\", \"participant-row\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\", 2, \"width\", \"100%\", \"display\", \"flex\", \"justify-content\", \"space-around\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"participant-row\"], [1, \"select-participant\", 3, \"click\"], [\"alt\", \"AV\", 1, \"participant-avatar\", 3, \"src\"], [1, \"participant-name\"], [\"class\", \"participant-chip\", \"color\", \"warn\", \"selected\", \"\", 3, \"matTooltip\", 4, \"ngIf\"], [\"class\", \"participant-chip\", \"color\", \"accent\", \"selected\", \"\", 3, \"matTooltip\", 4, \"ngIf\"], [\"class\", \"participant-chip\", \"color\", \"primary\", 3, \"matTooltip\", \"selected\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", 2, \"width\", \"24px\", 3, \"matMenuTriggerFor\"], [2, \"color\", \"#646464\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 2, \"font-size\", \"10pt\", \"height\", \"35px\", \"line-height\", \"35px\", 3, \"click\"], [\"mat-menu-item\", \"\", \"style\", \"font-size: 10pt; height: 35px; line-height: 35px\", 3, \"click\", 4, \"ngIf\"], [\"color\", \"warn\", \"selected\", \"\", 1, \"participant-chip\", 3, \"matTooltip\"], [\"color\", \"accent\", \"selected\", \"\", 1, \"participant-chip\", 3, \"matTooltip\"], [\"color\", \"primary\", 1, \"participant-chip\", 3, \"matTooltip\", \"selected\"]],\n    template: function ChatParticipantsEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 0);\n        i0.ɵɵtext(1, \" Participants edit\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-form-field\", 1);\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"mat-icon\", 3);\n        i0.ɵɵtext(5, \"search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵlistener(\"scrolled\", function ChatParticipantsEditComponent_Template_div_scrolled_6_listener() {\n          return ctx.nextPage();\n        });\n        i0.ɵɵtemplate(7, ChatParticipantsEditComponent_div_7_Template, 20, 9, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ChatParticipantsEditComponent_Template_button_click_9_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtext(10, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.searchName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"scrollWindow\", false)(\"infiniteScrollUpDistance\", 10)(\"infiniteScrollThrottle\", 100);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      }\n    },\n    directives: [i5.MatFormField, i6.MatInput, i7.DefaultValueAccessor, i7.MinLengthValidator, i7.MaxLengthValidator, i7.NgControlStatus, i7.FormControlDirective, i8.MatIcon, i5.MatSuffix, i9.InfiniteScrollDirective, i10.NgForOf, i11.MatChipList, i10.NgIf, i11.MatChip, i12.MatTooltip, i13.MatButton, i14.MatMenuTrigger, i14.MatMenu, i14.MatMenuItem, i1.MatDialogActions],\n    styles: [\".participant-list-content[_ngcontent-%COMP%]{overflow-y:auto;scrollbar-width:thin;height:calc(100% - 160px)}.participant-row[_ngcontent-%COMP%]{width:100%;height:auto;display:flex;flex-direction:row;align-items:center;justify-content:space-between}.participant-row[_ngcontent-%COMP%]:hover{background:#e8e8e8;cursor:pointer}.participant-row[disabled][_ngcontent-%COMP%]{color:silver}.participant-row[disabled][_ngcontent-%COMP%]:hover{background:white}.select-participant[_ngcontent-%COMP%]{height:auto;flex-basis:calc(100% - 24px);display:flex;flex-direction:row;align-items:center;justify-content:space-between;text-align:left;border:none;background:inherit;cursor:inherit}.select-participant[disabled][_ngcontent-%COMP%]{cursor:auto}.participant-avatar[_ngcontent-%COMP%]{border-radius:50%;width:33px;height:33px}.participant-name[_ngcontent-%COMP%]{font-size:10pt;flex-basis:calc(100% - 80px);word-break:break-all;padding-right:5px}.participant-chip[_ngcontent-%COMP%]{align-items:center;justify-content:center;width:30px;height:30px;min-height:30px;font-size:8pt}\"]\n  });\n  return ChatParticipantsEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}