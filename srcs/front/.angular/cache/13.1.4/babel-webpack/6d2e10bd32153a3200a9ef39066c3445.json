{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/icon\";\n\nfunction OtpComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid code \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OtpComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Code declined \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OtpComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function OtpComponent_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.otpFormControl.reset();\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n} // import { isNumeric } from 'rxjs/util/isNumeric';\n\n\nexport let OtpComponent = /*#__PURE__*/(() => {\n  class OtpComponent {\n    constructor(authService, _route, router) {\n      this.authService = authService;\n      this._route = _route;\n      this.router = router;\n      this.token = '';\n      this.otpFormControl = new FormControl('', [Validators.required, otpCodeValidator()]);\n    }\n\n    ngOnInit() {\n      let res = this._route.queryParams.subscribe(params => {\n        this.token = params[\"token\"];\n      });\n    }\n\n    submit() {\n      console.log(this.otpFormControl);\n      if (!this.otpFormControl.valid) return;\n      this.authService.continueTwoAuth(this.token, this.otpFormControl.value).subscribe(result => {\n        console.log(result);\n        if (!result.token) this.router.navigate(['/login/otp']);else {\n          this.authService.setSession(result.token);\n          this.router.navigate(['/chat']);\n        }\n      }, error => {\n        this.otpFormControl.setErrors({\n          otpError: {\n            value: 'code declined'\n          }\n        });\n      });\n    }\n\n  }\n\n  OtpComponent.ɵfac = function OtpComponent_Factory(t) {\n    return new (t || OtpComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  OtpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OtpComponent,\n    selectors: [[\"app-otp\"]],\n    decls: 13,\n    vars: 5,\n    consts: [[1, \"otp-card\"], [\"appearance\", \"outline\", 1, \"otp-form-field\"], [\"matInput\", \"\", \"type\", \"text\", \"maxlength\", \"6\", 3, \"formControl\"], [4, \"ngIf\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\", 4, \"ngIf\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\"]],\n    template: function OtpComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"mat-card-title\");\n        i0.ɵɵtext(2, \"Enter two auth code:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Enter code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2);\n        i0.ɵɵtemplate(7, OtpComponent_mat_error_7_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(8, OtpComponent_mat_error_8_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(9, OtpComponent_button_9_Template, 3, 0, \"button\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-card-actions\", 5);\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function OtpComponent_Template_button_click_11_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtext(12, \"SUBMIT\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControl\", ctx.otpFormControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.otpFormControl.hasError(\"otpCode\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.otpFormControl.hasError(\"otpError\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.otpFormControl.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.otpFormControl.valid);\n      }\n    },\n    directives: [i3.MatCard, i3.MatCardTitle, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.DefaultValueAccessor, i6.MaxLengthValidator, i6.NgControlStatus, i6.FormControlDirective, i7.NgIf, i4.MatError, i8.MatButton, i4.MatSuffix, i9.MatIcon, i3.MatCardActions],\n    styles: [\".otp-card[_ngcontent-%COMP%]{width:35%;min-width:350px;margin:30px auto auto;padding:50px;height:150px}.otp-form-field[_ngcontent-%COMP%]{margin-top:20px}\"]\n  });\n  return OtpComponent;\n})();\nexport function otpCodeValidator() {\n  const isNumeric = val => {\n    return !isNaN(Number(val));\n  };\n\n  return control => {\n    let forbidden = false;\n    if (!control.value || control.value.length != 6 || !isNumeric(control.value)) forbidden = true;\n    return forbidden ? {\n      otpCode: {\n        value: control.value\n      }\n    } : null;\n  };\n}","map":null,"metadata":{},"sourceType":"module"}