{"ast":null,"code":"import { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../../services/chat.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction ChatHeaderEditComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getNameError());\n  }\n}\n\nfunction ChatHeaderEditComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.getDescriptionError());\n  }\n}\n\nexport let ChatHeaderEditComponent = /*#__PURE__*/(() => {\n  class ChatHeaderEditComponent {\n    constructor(dialogRef, data, chatService) {\n      this.dialogRef = dialogRef;\n      this.chatService = chatService;\n      this.details = data.details;\n      this.brief = data.brief;\n      this.name = new FormControl(this.details.name, [Validators.required]);\n      this.description = new FormControl(this.details.description);\n    }\n\n    getNameError() {\n      return this.name.getError('validation');\n    }\n\n    getDescriptionError() {\n      return this.description.getError('validation');\n    }\n\n    onSubmit() {\n      if (this.name.valid) {\n        this.chatService.updateChat(this.details.id, {\n          name: this.name.value,\n          description: this.description.value,\n          avatar: this.details.avatar\n        }).subscribe(() => {\n          this.details.name = this.name.value;\n          this.brief.name = this.name.value;\n          this.details.description = this.description.value == null || this.description.value.length == 0 ? null : this.description.value;\n          this.dialogRef.close();\n        }, error => {\n          if (error.status == 400\n          /* BadRequest */\n          ) {\n            const message = error.error.message.toString();\n\n            if (message.toLowerCase().includes(\"название\")) {\n              this.name.setErrors({\n                'validation': message\n              });\n            } else if (message.toLowerCase().includes(\"описание\")) {\n              this.description.setErrors({\n                'validation': message\n              });\n            } else {\n              throw new HttpErrorResponse(error);\n            }\n          } else {\n            throw new HttpErrorResponse(error);\n          }\n        });\n      }\n    }\n\n    closeDialog() {\n      this.dialogRef.close();\n    }\n\n    getAvatarError() {}\n\n  }\n\n  ChatHeaderEditComponent.ɵfac = function ChatHeaderEditComponent_Factory(t) {\n    return new (t || ChatHeaderEditComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.ChatService));\n  };\n\n  ChatHeaderEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatHeaderEditComponent,\n    selectors: [[\"app-chat-header-edit\"]],\n    inputs: {\n      details: \"details\",\n      brief: \"brief\"\n    },\n    decls: 18,\n    vars: 4,\n    consts: [[2, \"text-align\", \"center\", \"margin\", \"0 0 10px\", \"font-size\", \"12pt\", \"font-weight\", \"500\"], [2, \"height\", \"calc(100% - 20px - 70px)\", \"overflow-y\", \"auto\", \"scrollbar-width\", \"thin\"], [\"appearance\", \"fill\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"required\", \"\", 3, \"formControl\"], [4, \"ngIf\"], [\"appearance\", \"fill\", 2, \"width\", \"100%\", \"margin-top\", \"10px\"], [\"matInput\", \"\", \"cdkAutosizeMinRows\", \"1\", 2, \"height\", \"auto\", 3, \"formControl\"], [\"mat-dialog-actions\", \"\", 2, \"width\", \"100%\", \"display\", \"flex\", \"justify-content\", \"space-around\", \"bottom\", \"0\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"type\", \"submit\", \"value\", \"submit\", \"cdkFocusInitial\", \"\", 3, \"click\"]],\n    template: function ChatHeaderEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 0);\n        i0.ɵɵtext(1, \" Main info edit\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Enter name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, ChatHeaderEditComponent_mat_error_7_Template, 2, 1, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Enter description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"textarea\", 6);\n        i0.ɵɵtemplate(12, ChatHeaderEditComponent_mat_error_12_Template, 2, 1, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵelementStart(14, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function ChatHeaderEditComponent_Template_button_click_14_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtext(15, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ChatHeaderEditComponent_Template_button_click_16_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(17, \"Apply\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControl\", ctx.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.name.hasError(\"validation\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.description);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.description.hasError(\"validation\"));\n      }\n    },\n    directives: [i3.MatFormField, i3.MatLabel, i4.MatInput, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.FormControlDirective, i6.NgIf, i3.MatError, i1.MatDialogActions, i7.MatButton],\n    styles: [\"\"]\n  });\n  return ChatHeaderEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}