{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { ChatType, UserChatStatus } from \"../../services/chat.service\";\nimport { ScrollService } from \"../../services/scroll.service\";\nimport { ChatInfoComponent } from \"../chat-info/chat-info.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.service\";\nimport * as i2 from \"../../services/chat.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"../../services/game.service\";\nimport * as i5 from \"ngx-infinite-scroll\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/flex-layout/extended\";\nimport * as i8 from \"@angular/material/chips\";\nimport * as i9 from \"@angular/material/tooltip\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/forms\";\nimport * as i13 from \"@angular/material/button\";\nimport * as i14 from \"@angular/material/icon\";\nconst _c0 = [\"messageScroller\"];\n\nconst _c1 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\n\nfunction ChatRoomComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"div\", 12);\n    i0.ɵɵelementStart(2, \"img\", 13);\n    i0.ɵɵlistener(\"click\", function ChatRoomComponent_div_8_div_1_Template_img_click_2_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const message_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.goToProfile(message_r3.authorUser.id);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵelementStart(4, \"p\", 15);\n    i0.ɵɵlistener(\"click\", function ChatRoomComponent_div_8_div_1_Template_p_click_4_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const message_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.goToProfile(message_r3.authorUser.id);\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 16);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 17);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", message_r3.authorUser.avatar, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c1, message_r3.authorUser.id == ctx_r4.user.id ? \"#e4e1fd\" : \"#ffffff\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r3.authorUser.username, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r3.text, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r3.dateTimeSend.toLocaleString(), \" \");\n  }\n}\n\nfunction ChatRoomComponent_div_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"mat-chip\", 19);\n    i0.ɵɵelementStart(2, \"p\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", message_r3.dateTimeSend.toLocaleString());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r3.text);\n  }\n}\n\nfunction ChatRoomComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ChatRoomComponent_div_8_div_1_Template, 10, 7, \"div\", 9);\n    i0.ɵɵtemplate(2, ChatRoomComponent_div_8_ng_template_2_Template, 4, 2, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n\n    const _r5 = i0.ɵɵreference(3);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r3.authorUser != null)(\"ngIfElse\", _r5);\n  }\n}\n\nfunction ChatRoomComponent_mat_form_field_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 21);\n    i0.ɵɵelementStart(1, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatRoomComponent_mat_form_field_9_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.messageText = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mat-hint\", 23);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function ChatRoomComponent_mat_form_field_9_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.sendMessage();\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"send\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.messageText);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.messageText);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.messageText.length, \" / 1000\");\n  }\n}\n\nfunction ChatRoomComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function ChatRoomComponent_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.joinInChat();\n    });\n    i0.ɵɵtext(1, \" JOIN IN CHAT \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    \"height\": a0\n  };\n};\n\nexport let ChatRoomComponent = /*#__PURE__*/(() => {\n  class ChatRoomComponent {\n    constructor(userService, chatService, dialog, gameService) {\n      this.userService = userService;\n      this.chatService = chatService;\n      this.dialog = dialog;\n      this.gameService = gameService;\n      this.messages = [];\n      this.user = this.userService.user;\n      this.messageText = '';\n      this.scrollService = new ScrollService();\n      this.chat = chatService.getChat();\n      this.socket = chatService.getSocket();\n    }\n\n    ngOnInit() {\n      if (this.chat.type == ChatType.PUBLIC || this.chat.verified) {\n        this.listenChatSocket();\n      }\n    }\n\n    ngAfterViewInit() {}\n\n    listenChatSocket() {\n      this.listenMessageReceive();\n      this.listenMessagePageReceive();\n      this.socket.emit('/enter', this.chat.id);\n    }\n\n    nextPage() {\n      const nextPage = {\n        take: 100,\n        skip: this.messages.length\n      };\n      this.socket.emit('/message/page', nextPage);\n    }\n\n    sendMessage() {\n      if (this.messageText != '') {\n        this.socket.emit('/message/send', this.messageText);\n      }\n\n      this.messageText = '';\n      this.scroller.nativeElement.scrollTop = this.scroller.nativeElement.scrollTopMax;\n    }\n\n    listenMessageReceive() {\n      this.socket.on('/message/receive', message => {\n        const chat = message.targetChat;\n\n        if (message && message.targetChat.id == this.chat.id && !this.messages.some(m => m.id == message.id)) {\n          message.dateTimeSend = new Date(message.dateTimeSend);\n          this.messages.push(message);\n        }\n\n        this.chatService.treatChat(chat);\n      });\n    }\n\n    listenMessagePageReceive() {\n      this.socket.on('/message/page-receive', messagePage => {\n        messagePage.messages.forEach(message => {\n          if (message.targetChat.id == this.chat.id && !this.messages.some(m => m.id == message.id)) {\n            message.dateTimeSend = new Date(message.dateTimeSend);\n            this.messages.unshift(message);\n          }\n        });\n      });\n    }\n\n    onScroll() {// console.log(this.scroller.nativeElement.scrollTop);\n      // console.log(this.scroller.nativeElement.scrollHeight);\n      // console.log(this.scrollService.previousScrollHeightMinusTop);\n      // console.log(document.body.scrollHeight,\n      //   document.body.offsetHeight,\n      //   document.body.clientHeight,\n      //   document.documentElement.scrollHeight,\n      //   document.documentElement.offsetHeight,\n      //   document.documentElement.clientHeight,\n      //   window.pageYOffset);\n      // console.log(this.scroller.nativeElement);\n    }\n\n    openChatInfo() {\n      this.dialog.open(ChatInfoComponent, {\n        width: '400px',\n        backdropClass: \"backdrop-dialog\",\n        height: '560px',\n        data: this.chat\n      });\n    }\n\n    getMessageBlockHeight() {\n      if (!this.chat.verified) {\n        return 'calc(100% - 40px)';\n      }\n\n      return this.chat.userChatStatus == UserChatStatus.MUTED ? '100%' : 'calc(100% - 71px - 10px)';\n    }\n\n    joinInChat() {\n      var _a;\n\n      (_a = document.getElementById(\"joinInChat\")) === null || _a === void 0 ? void 0 : _a.click();\n    }\n\n    goToProfile(userId) {\n      if (userId != null) {\n        this.chatService.routeToProfile(userId);\n      }\n    }\n\n    availableToMatch(user) {\n      return this.user.id != user.id;\n    }\n\n    inviteToGame(authorUser) {\n      if (this.user.id != authorUser.id) {\n        this.gameService.inviteToPlay(authorUser.id);\n      }\n    }\n\n  }\n\n  ChatRoomComponent.ɵfac = function ChatRoomComponent_Factory(t) {\n    return new (t || ChatRoomComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ChatService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.GameService));\n  };\n\n  ChatRoomComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatRoomComponent,\n    selectors: [[\"app-chat-room\"]],\n    viewQuery: function ChatRoomComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 11,\n    consts: [[1, \"chat-room\"], [1, \"message-block-header\", 3, \"click\"], [1, \"header-chat-name\"], [1, \"header-chat-type\"], [1, \"message-block-content\"], [\"infiniteScroll\", \"\", 1, \"messages\", 3, \"scrollWindow\", \"infiniteScrollDistance\", \"infiniteScrollThrottle\", \"ngStyle\", \"scrolledUp\", \"scroll\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"message-form\", \"appearance\", \"fill\", 4, \"ngIf\"], [\"color\", \"primary\", \"mat-stroked-button\", \"\", \"style\", \"width: 100%; border: none; background-color: #e5e5e5; border-radius: 0 0 10px 10px; height: 40px; font-size: 10pt\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"message-row\", 4, \"ngIf\", \"ngIfElse\"], [\"infoMessage\", \"\"], [1, \"message-row\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\", \"width\", \"35px\"], [\"alt\", \"AV\", 1, \"profile-avatar\", 3, \"src\", \"click\"], [1, \"message\", 3, \"ngStyle\"], [2, \"text-align\", \"left\", \"font-size\", \"10pt\", \"color\", \"#673ab5\", \"margin\", \"0\", \"font-weight\", \"500\", \"cursor\", \"pointer\", 3, \"click\"], [2, \"font-size\", \"10pt\", \"text-align\", \"left\", \"margin\", \"0 0 2px\"], [2, \"font-size\", \"8pt\", \"text-align\", \"right\", \"font-style\", \"italic\", \"margin\", \"0\", \"color\", \"gray\"], [1, \"info-message-row\"], [3, \"matTooltip\"], [2, \"color\", \"#333333\", \"margin\", \"5px\", \"font-weight\", \"450\", \"font-size\", \"10pt\"], [\"appearance\", \"fill\", 1, \"message-form\"], [\"matInput\", \"\", \"type\", \"text\", \"minlength\", \"1\", \"maxlength\", \"1000\", \"placeholder\", \"Write message...\", \"name\", \"messageText\", \"autocomplete\", \"off\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [\"align\", \"end\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Send\", 3, \"click\"], [\"color\", \"primary\", \"mat-stroked-button\", \"\", 2, \"width\", \"100%\", \"border\", \"none\", \"background-color\", \"#e5e5e5\", \"border-radius\", \"0 0 10px 10px\", \"height\", \"40px\", \"font-size\", \"10pt\", 3, \"click\"]],\n    template: function ChatRoomComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ChatRoomComponent_Template_button_click_1_listener() {\n          return ctx.chat.type != null ? ctx.openChatInfo() : ctx.goToProfile(ctx.chat.secondUserId);\n        });\n        i0.ɵɵelementStart(2, \"p\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 3);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵlistener(\"scrolledUp\", function ChatRoomComponent_Template_div_scrolledUp_7_listener() {\n          return ctx.nextPage();\n        })(\"scroll\", function ChatRoomComponent_Template_div_scroll_7_listener() {\n          return ctx.onScroll();\n        });\n        i0.ɵɵtemplate(8, ChatRoomComponent_div_8_Template, 4, 2, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, ChatRoomComponent_mat_form_field_9_Template, 7, 3, \"mat-form-field\", 7);\n        i0.ɵɵtemplate(10, ChatRoomComponent_button_10_Template, 2, 0, \"button\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.chat.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.chat.type);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"scrollWindow\", false)(\"infiniteScrollDistance\", 20)(\"infiniteScrollThrottle\", 50)(\"ngStyle\", i0.ɵɵpureFunction1(9, _c2, ctx.getMessageBlockHeight()));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.chat.verified && ctx.chat.userChatStatus != \"MUTED\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.chat.verified);\n      }\n    },\n    directives: [i5.InfiniteScrollDirective, i6.NgStyle, i7.DefaultStyleDirective, i6.NgForOf, i6.NgIf, i8.MatChip, i9.MatTooltip, i10.MatFormField, i11.MatInput, i12.DefaultValueAccessor, i12.MinLengthValidator, i12.MaxLengthValidator, i12.NgControlStatus, i12.NgModel, i10.MatHint, i13.MatButton, i10.MatSuffix, i14.MatIcon],\n    styles: [\".chat-room[_ngcontent-%COMP%]{height:100%;width:100%}.message-block-header[_ngcontent-%COMP%]{width:100%;height:55px;background-color:#dfdfdf;border-radius:10px 10px 0 0;border:none;display:flex;flex-direction:column;align-items:center;cursor:pointer}.header-chat-name[_ngcontent-%COMP%]{margin-top:auto;flex-basis:13pt;font-size:13pt;margin-bottom:0;font-weight:450}.header-chat-type[_ngcontent-%COMP%]{margin-top:0;margin-bottom:auto;flex-basis:10pt;font-size:10pt}.message-block-content[_ngcontent-%COMP%]{height:calc(100% - 55px);width:100%;background-color:inherit;border-radius:inherit}.messages[_ngcontent-%COMP%]{height:calc(100% - 81px);width:100%;overflow-y:auto;scrollbar-width:thin}.message-form[_ngcontent-%COMP%]{height:71px;margin-bottom:10px;background-color:inherit;width:100%}.message-row[_ngcontent-%COMP%]{margin:10px;display:flex;flex-direction:row;height:auto!important}.info-message-row[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;align-items:center;margin:10px auto}.profile-avatar[_ngcontent-%COMP%]{cursor:pointer;width:35px;height:35px;border-radius:50%}.message[_ngcontent-%COMP%]{background-color:#6aecc5;margin-left:10px;width:auto;border-radius:10px;padding:6px;height:auto;word-break:break-all}.invite-game[_ngcontent-%COMP%]{align-self:center;font-size:35px;width:35px;color:#858585;cursor:pointer}.invite-game[_ngcontent-%COMP%]:hover{color:#673ab5}\"]\n  });\n  return ChatRoomComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}