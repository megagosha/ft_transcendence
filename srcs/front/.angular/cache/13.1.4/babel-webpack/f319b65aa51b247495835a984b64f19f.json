{"ast":null,"code":"import { FormControl } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { debounceTime, distinctUntilChanged, map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../../services/chat.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"ngx-infinite-scroll\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/checkbox\";\nimport * as i10 from \"@angular/material/button\";\n\nfunction ChatParticipantsAddComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ChatParticipantsAddComponent_div_7_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onSelect(user_r2);\n    });\n    i0.ɵɵelement(2, \"img\", 11);\n    i0.ɵɵelementStart(3, \"div\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-checkbox\", 13);\n    i0.ɵɵlistener(\"change\", function ChatParticipantsAddComponent_div_7_Template_mat_checkbox_change_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onSelect(user_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", user_r2.avatar, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.username);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r0.selected(user_r2));\n  }\n}\n\nfunction ChatParticipantsAddComponent_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ChatParticipantsAddComponent_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onSubmit();\n    });\n    i0.ɵɵtext(1, \"Add\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ChatParticipantsAddComponent = /*#__PURE__*/(() => {\n  class ChatParticipantsAddComponent {\n    constructor(dialogRef, data, chatService) {\n      this.dialogRef = dialogRef;\n      this.chatService = chatService;\n      this.users = [];\n      this.allUsers = [];\n      this.selectedUserIds = new Set();\n      this.return = false;\n      this.pageSize = 50;\n      this.searchName = new FormControl('');\n      this.details = data.details;\n      this.brief = data.brief;\n    }\n\n    ngOnInit() {\n      this.nextPage();\n      this.searchName.valueChanges.pipe(debounceTime(500), distinctUntilChanged(), map(chatName => {\n        this.findUsers();\n      })).subscribe();\n    }\n\n    nextPage() {\n      this.chatService.findNotParticipants(this.details.id, this.searchName.value, this.users.length, this.pageSize).subscribe(page => {\n        page.users.forEach(user => {\n          const userInd = this.users.findIndex(u => u.id == user.id);\n\n          if (userInd == -1) {\n            this.users.push(user);\n          }\n        });\n      });\n    }\n\n    onSelect(user) {\n      if (!this.selectedUserIds.has(user.id)) {\n        this.selectedUserIds.add(user.id);\n      } else {\n        this.selectedUserIds.delete(user.id);\n      }\n\n      if (this.return) {\n        this.searchName.setValue(\"\");\n      }\n    }\n\n    selected(user) {\n      return this.selectedUserIds.has(user.id);\n    }\n\n    findUsers() {\n      const userName = this.searchName.value;\n\n      if (userName != null && userName.length > 0) {\n        if (!this.return) {\n          this.allUsers = this.users;\n          this.return = true;\n        }\n\n        this.users = [];\n        this.nextPage();\n      } else if (this.return) {\n        this.users = this.allUsers;\n        this.allUsers = [];\n        this.return = false;\n      }\n    }\n\n    closeDialog() {\n      this.dialogRef.close();\n    }\n\n    onSubmit() {\n      if (this.selectedUserIds.size > 0) {\n        const ids = [];\n        this.selectedUserIds.forEach(id => ids.push(id));\n        this.chatService.addParticipants(this.details.id, ids).subscribe(() => {\n          this.details.userCount += ids.length;\n          this.dialogRef.close();\n        });\n      } else {\n        this.dialogRef.close();\n      }\n    }\n\n  }\n\n  ChatParticipantsAddComponent.ɵfac = function ChatParticipantsAddComponent_Factory(t) {\n    return new (t || ChatParticipantsAddComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.ChatService));\n  };\n\n  ChatParticipantsAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatParticipantsAddComponent,\n    selectors: [[\"app-chat-participants-add\"]],\n    inputs: {\n      details: \"details\",\n      brief: \"brief\"\n    },\n    decls: 12,\n    vars: 6,\n    consts: [[2, \"text-align\", \"center\", \"margin\", \"0 0 10px\", \"font-size\", \"12pt\", \"font-weight\", \"500\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"type\", \"search\", \"minlength\", \"1\", \"maxlength\", \"50\", \"placeholder\", \"Search by name\", \"name\", \"messageText\", \"autocomplete\", \"off\", 1, \"chat-name-input\", 3, \"formControl\"], [\"matSuffix\", \"\"], [\"infiniteScroll\", \"\", 1, \"user-list-content\", 3, \"scrollWindow\", \"infiniteScrollUpDistance\", \"infiniteScrollThrottle\", \"scrolled\"], [\"class\", \"user-row\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\", 2, \"width\", \"100%\", \"display\", \"flex\", \"justify-content\", \"space-around\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"type\", \"submit\", \"value\", \"submit\", \"cdkFocusInitial\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"user-row\"], [1, \"select-user\", 3, \"click\"], [\"alt\", \"AV\", 1, \"user-avatar\", 3, \"src\"], [1, \"user-name\"], [\"color\", \"primary\", 1, \"user-checkbox\", 3, \"checked\", \"change\"], [\"mat-button\", \"\", \"type\", \"submit\", \"value\", \"submit\", \"cdkFocusInitial\", \"\", 3, \"click\"]],\n    template: function ChatParticipantsAddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 0);\n        i0.ɵɵtext(1, \" Participants add\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-form-field\", 1);\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"mat-icon\", 3);\n        i0.ɵɵtext(5, \"search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵlistener(\"scrolled\", function ChatParticipantsAddComponent_Template_div_scrolled_6_listener() {\n          return ctx.nextPage();\n        });\n        i0.ɵɵtemplate(7, ChatParticipantsAddComponent_div_7_Template, 6, 3, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ChatParticipantsAddComponent_Template_button_click_9_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtext(10, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, ChatParticipantsAddComponent_button_11_Template, 2, 0, \"button\", 8);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.searchName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"scrollWindow\", false)(\"infiniteScrollUpDistance\", 10)(\"infiniteScrollThrottle\", 100);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedUserIds.size > 0);\n      }\n    },\n    directives: [i3.MatFormField, i4.MatInput, i5.DefaultValueAccessor, i5.MinLengthValidator, i5.MaxLengthValidator, i5.NgControlStatus, i5.FormControlDirective, i6.MatIcon, i3.MatSuffix, i7.InfiniteScrollDirective, i8.NgForOf, i9.MatCheckbox, i1.MatDialogActions, i10.MatButton, i8.NgIf],\n    styles: [\".user-list-content[_ngcontent-%COMP%]{overflow-y:auto;scrollbar-width:thin;height:calc(100% - 160px)}.user-row[_ngcontent-%COMP%]{width:100%;padding-top:3px;padding-bottom:3px;height:auto;display:flex;flex-direction:row;align-items:center;justify-content:space-between}.user-row[_ngcontent-%COMP%]:hover{background:#e8e8e8;cursor:pointer}.user-row[disabled][_ngcontent-%COMP%]{color:silver}.user-row[disabled][_ngcontent-%COMP%]:hover{background:white}.select-user[_ngcontent-%COMP%]{height:auto;flex-basis:calc(100% - 36px);display:flex;flex-direction:row;align-items:center;justify-content:space-between;text-align:left;border:none;background:inherit;cursor:inherit}.user-avatar[_ngcontent-%COMP%]{border-radius:50%;background-color:#fff;width:33px;height:33px}.user-name[_ngcontent-%COMP%]{font-size:10pt;flex-basis:calc(100% - 45px);word-break:break-all;padding-right:5px}.user-checkbox[_ngcontent-%COMP%]{margin:0;width:33px}\"]\n  });\n  return ChatParticipantsAddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}